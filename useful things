## Remove a variable that you no longer need
rm(variable)

## Remove columns from df
starwars %>% 
  select(-name) %>%        # the range of columns from 'name' to 'mass'
  select(-(name:mass)) %>%        # the range of columns from 'name' to 'mass'
  select(-contains('color')) %>%  # any column name that contains 'color'
  select(-starts_with('bi')) %>%  # any column name that starts with 'bi'
  select(-ends_with('er')) %>%    # any column name that ends with 'er'
  select(-matches('^f.+s$')) %>%  # any column name matching the regex pattern
  select_if(~!is.list(.)) %>%     # not by column name but by data type

## Text into columns - https://rdrr.io/cran/tidyr/man/separate.html
separate(data, col, into, sep = "[^[:alnum:]]+", remove = TRUE,
  convert = FALSE, extra = "warn", fill = "warn", ...)
  # e.g.
adobe <- separate(df, column, c("ActivityDt", "ActivityHour"), sep = ", Hour", remove = TRUE)

  
## NAs into 0s
df[is.na(df)] <- 0  

## Parsing dates
library(lubridate)
parse_date_time(df$datecolumn, orders = "d%/%m/%Y")    
  # another option but it doesnt always work
as.Date(df$datecolumn, format = "d%/%m/%Y")

#Extract unique elements of a data frame

as.data.frame(unique(df$column))


# First occurence for a variable
firstDate <-  df %>% 
  group_by(customeraccountnumber) %>% 
  arrange(date) %>%
  slice(1) %>% # takes the first occurrence if there is a tie
  ungroup()


# Gather
plotdata_abs <- gather(df, key = "key_column", value = "values_column")

plotdata_abs <- gather(df, key = "key_column", value = "values_column" ,2:ncol(qpCohort.wide))
